syntax = "proto3";

package io.debezium.server.iceberg.rpc;

import "google/protobuf/struct.proto";  // For Value type

service RecordIngestService {
  rpc SendRecords(IcebergPayload) returns (RecordIngestResponse);
}

message IcebergPayload {
  enum PayloadType {
    RECORDS = 0;
    COMMIT = 1;
    EVOLVE_SCHEMA = 2;
    DROP_TABLE = 3;
    GET_OR_CREATE_TABLE = 4;
  }
  
  PayloadType type = 1;

  message Metadata {
    string dest_table_name = 1;
    string thread_id = 2;
    optional string primary_key = 3;  // Only for records/evolve_schema/get_or_create_table
    repeated SchemaField schema = 4;   // Only for records/evolve_schema/get_or_create_table
  }

  message SchemaField {
    string ice_type = 1;
    string key = 2;
  }

  message IceRecord {
    map<string, google.protobuf.Value> fields = 1;
    string record_type = 2;  // "u", "c", "r"
  }

  Metadata metadata = 2;
  repeated IceRecord records = 3;  // Only present for "records" type
}

message RecordIngestResponse {
  string result = 1;
  bool success = 2;
}