version: "3.7"

services:
  init-keyfile:
    image: mongo:8.0
    container_name: init_keyfile
    command: >
      sh -c "
      if [ ! -f /etc/ssl/sample.key ]; then
        echo 'Generating keyfile...';
        openssl rand -base64 756 > /etc/ssl/sample.key && chmod 400 /etc/ssl/sample.key;
      else
        echo 'Keyfile already exists.';
      fi
      "
    volumes:
      - mongo-keyfile-vol:/etc/ssl
    networks:
      - olake-test
    restart: "no"

  db:
    image: mongo:8.0
    container_name: olake_mongodb-test
    depends_on:
      - init-keyfile
    entrypoint: |
      bash -c '
        echo "Waiting for keyfile..."
        while [ ! -f /etc/ssl/sample.key ]; do sleep 1; done

        echo "Starting mongod without authentication..."
        mongod --replSet rs0 --bind_ip_all --port 27017 &
        MONGO_PID=$!

        echo "Waiting for MongoDB to start..."
        until mongosh --port 27017 --eval "db.runCommand({ ping: 1 })" >/dev/null 2>&1; do
          sleep 2
        done

        echo "Initializing replica set..."
        mongosh --port 27017 --eval "rs.initiate({_id: \\"rs0\\", members: [{_id: 0, host: \\"localhost:27017\\"}]})"

        sleep 5

        echo "Creating root user..."
        mongosh --port 27017 --eval "
          db = db.getSiblingDB(\\"admin\\");
          db.createUser({
            user: \\"olake\\",
            pwd: \\"olake\\",
            roles: [{ role: \\"root\\", db: \\"admin\\" }]
          });
        "

        echo "Restarting MongoDB with authentication..."
        kill $MONGO_PID
        wait $MONGO_PID

        exec mongod --replSet rs0 --bind_ip_all --port 27017 --keyFile /etc/ssl/sample.key
      '

    ports:
      - "27017:27017"
    volumes:
      - mongo-keyfile-vol:/etc/ssl
    networks:
      - olake-test
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  mongo-keyfile-vol:

networks:
  olake-test:
    external: true
